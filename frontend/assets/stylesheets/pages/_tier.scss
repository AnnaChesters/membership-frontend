$current-indicator: rem(47px);

.secondary-content {
    flex-basis: 16em;
    order: 2;
    @if $old-ie {
        float: left;
    }
}

.right-align {
    float: right;
}

.package-container {
    border-top: rem(1px) solid transparent;
    border-bottom: rem(1px) solid transparent;
    padding: rem($gs-gutter);
}

.package-container__header {
    padding-bottom: rem($gs-gutter);
    @include mq(tablet) {
        margin-bottom: rem(40px);
    }
    border-bottom: rem(1px) dotted #333333;
}

// .package-list is a flexbox
// so each .package inside is equal width
.package-list {

    @include mq(desktop) {
        @include flexbox;
        @include align-items(stretch);
        margin: 0 auto;
        border-spacing: rem($gs-gutter);
        padding-top: $current-indicator;
    }
}

.package-list--bordered .package {
    border: rem(1px) solid $c-neutral5;
}

.package {
    background-color: $c-neutral7;
    position: relative;

    // .package is a flexbox too to
    // align CTA buttons to bottom
    // regardless of package length(!)
    @include flexbox;
    @include justify-content(space-between);
    @include flex-direction(column);
    align-items: stretch;

    margin-right: rem($gs-gutter);

    &:last-child {
        margin-right: 0;
    }

    @include mq(desktop) {
        @include flex-grow(1);
        @include flex-basis(0); // this fixes a bug, dunno why
        // give them manual widths for no flexbox browsers
        .no-flexbox & {
            width: 31%;
            float: left;
            .patron-page & {
                width: 45%;
            }
        }
    }

    @include mq($until: desktop) {
        margin-right: 0;
        display: block;
        overflow: hidden;
        margin-bottom: rem($gs-gutter);
    }

    // override button widths for flexbox
    .action {
        width: auto;
        min-width: 100%;
    }
}

.package__item-cta {
    padding: rem($gs-gutter);
    // this is annoying but removes an ~8px height gap
    // between buttons in columns. if you can fix it, bravo!
    height: rem(100px);
    @include mq($from: tablet, $until: desktop) {
        width: 55%;
        float: right;
        padding-left: 0;
    }
}

.package__item--promo {
    // see above â€“ we show 2 buttons here so need more space
    height: rem(170px);
}

.package__current-indicator {
    color: $white;
    background-color: #9c9c9c;
    text-align: center;
    padding: rem($gs-baseline);
    margin: 0 rem($gs-baseline / 2);
    @include mq(desktop) {
        margin-top: -$current-indicator;
    }
    @include mq($until: desktop) {
        margin: 0;
    }
    // this prevents the text splitting onto 2 lines
    @include mq($from: desktop, $until: mem-full) {
        font-size: rem(14px);
    }
}

.package__inner {
    padding: rem($gs-gutter);
    @include mq($from: tablet, $until: desktop) {
        padding-top: rem($gs-gutter * 2);
        padding-bottom: 0;
    }
}

.package--current {
    border: rem(1px) solid #9c9c9c;
}

.package__title-container {
    position: relative;
    padding: rem($gs-gutter - 5) rem($gs-gutter);

    .package__title {
        @include fs-headline(5);
        color: $white;
        word-wrap: break-word;
        position: relative;
        padding-left: rem($gs-gutter + 16);
    }

    .price-info { 
        height: rem(50px);
        margin-top: rem($gs-gutter);
        color: $white;
    }

    &:before {
        @extend %icon-sprite;
        @extend %icon-sprite-g-white-28;
        content: '';
        display: block;
        position: absolute;
        left: rem($gs-gutter);
        top: rem($gs-gutter - 2);
    }

    &:after {
        display: block;
    }

    &--friend {
        background-color: $c-neutral1;
    }

    &--partner {
        background-color: $mem-brandLightblue;
        .package__title,
        .price-info { color: $black; }
    }

    &--patron {
        background-color: $mem-brandDarkBlue;
    }
}

.package__list-benefits {
    position: relative;
    padding-top: 45px;

    &:before {
        @include fs-bodyHeading(2);
        content: "What's included";
        display: block;
        border-top: 1px solid $c-neutral3;
        border-bottom: 1px solid $c-neutral3;
        position: absolute;
        padding: rem($gs-gutter / 2) 0;
        top: 0;
        width: 100%;
    }
}

.package__list-benefits-element {
    @include fs-bodyCopy(1);
    // padding-bottom: rem($gs-gutter);
    margin-bottom: 0;
    > li {

        &:last-child {
            margin-bottom: 0;
            padding-bottom: 0;
        }

    }

    > .u-cf {
        &:before,
        &:after {
            display: block;
        }
    }
}

// .package__list-benefits .package__list-benefits-element:before {
//     content: 'Plus:';
//     display: block;
//     @include fs-bodyCopy(1);
//     color: $c-neutral1;
//     margin-bottom: rem($gs-baseline / 2);
// }

// bit fugly - hides the "Plus:" text for first list item
.package__list-benefits .package__list-benefits-element:first-of-type:before {
    display: none;
}

.package__price {
    clear: both;
    overflow: hidden;

    @include mq($from: tablet) {
        margin-bottom: rem(20px);
        height: rem(45px);
    }

    @include mq($from: tablet, $until: desktop) {
        display: inline-block;
        width: 30%;
        margin-right: 14%;
        margin-top: 0;
        vertical-align: top;
        height: auto;
    }
}

.price-info {
    height: 100%;

    @include mq(tablet) {
        width: rem(280px);
        float: right;
    }

    @include mq(desktop) {
        width: 100%;
        float: none;
    }

    .price-info__detail {
        @include fs-headline(3);

        @include mq(desktop) {
            @include fs-headline(4);
        }

        @include mq(mem-full) {
            @include fs-headline(5);
        }

        .price-info__container-inner--last & {
            margin-top: rem($gs-gutter);
        }

        &--right {
            float: right;
            margin-top: rem($gs-gutter - 4);
        }

        &--sm-date {
            @include fs-headline(2);
        }
    }

    .price-info__container-inner {
        width: 50%;
        float: left;
    }

    .price-info__container-inner--last {
        text-align: right;
        height: 100%;
        border-left: rem(1px) solid $white-trans;

        .price-info__detail {
            margin-top: rem($gs-gutter - 4);
        }
    }

    .price-info__container-inner--full-width {
        width: 100%;
    }

    .price-info__sub-detail {
        @include fs-textSans(1);
        color: $white;
        display: block;

        .patron-page &,
        .package__title-container--partner & {
            color: $black;
        }
    }
}

.package__description {
    @include fs-bodyCopy(1);

    @include mq(desktop) {
        @include fs-bodyCopy(2);
        height: rem(120px);

        .patron-page & {
            height: auto;
        }
    }

    @include mq($from: tablet, $until: desktop) {
        display: inline-block;
        vertical-align: top;
    }
}

/* Upgrade
======================================================================= */

.upgrade__payment-label {
    display: block;
    position: relative;
    border: rem(1px) solid #cccccc;
    padding: $gs-baseline/2 $gs-baseline $gs-baseline/2 $gs-baseline*2;
    @include border-radius(5px);

    span {
        display: block;
        @include fs-textSans(4);
        margin: 0 0 $gs-baseline;
        &.payment-label__title {
            @include fs-headline(2);
        }
    }

    input[type=radio] {
        margin: 0;
        padding: 0;
        position: absolute;
        top: rem(10px);
        left: rem(6px);
    }

    input[type=radio]:checked + .payment-label__title {
        font-weight: bold;
    }

    &:hover {
        background-color: #eeeeee;
    }
}

/* Join - Become a member
======================================================================= */

.join {
    section {

        @include mq(tablet) {
            padding: rem($gs-gutter);
        }

        @include mq(desktop) {
            padding: rem($gs-baseline / 2) rem($gs-gutter) rem($gs-gutter) rem(gs-span(2) + $gs-gutter);
        }

        @include mq(mem-full) {
            padding: rem($gs-baseline / 2) rem($gs-gutter) rem($gs-gutter) rem(gs-span(3) - $gs-gutter);
        }
    }
}
