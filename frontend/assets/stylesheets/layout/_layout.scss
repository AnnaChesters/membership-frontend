/* ==========================================================================
   Layout
   ========================================================================== */

html {
    position: relative;
    min-height: 100%;
    background: $c-background url(/assets/images/bg-texture.jpg) repeat-y center;
    background-attachment: fixed;
    background-size: cover;
}

// TODO: Remove these when brochure pages are refactored
// This should be a component (banner image component?),
// rather than being manually added at thr root level.
html.about-membership {
    background: url(/assets/images/backgrounds/740-About-hero.jpg) no-repeat top center fixed;
    @include mq(tablet) {
        background: url(/assets/images/backgrounds/1920-About-hero.jpg) no-repeat top center fixed;
    }
}
html.patron-page {
    background: url(/assets/images/backgrounds/740-Patrons-hero.jpg) no-repeat top center fixed;
    @include mq(tablet) {
        background: url(/assets/images/backgrounds/1920-Patrons-hero.jpg) no-repeat top center fixed;
    }
}

/**
 * Use flexbox for sticky footer
 * @see http://philipwalton.github.io/solved-by-flexbox/demos/sticky-footer/
 */
body {
    @include flex-display();
    @include flex-direction(column);
    min-height: 100vh;
}
.container-global {
    @include flex(1);
}

/* Layout Helpers
   ========================================================================== */

// Constrained layout helper
// Breakpoints are mirrored in mixins/_mixins-layout.scss
.l-constrained {
    $offset: ($gs-gutter * 2);
    margin: 0 auto;

    @include mq(tablet) {
        max-width: map-get($max-widths, max-tablet) + $offset;
    }
    @include mq(mem-full) {
        max-width: map-get($max-widths, max-desktop) + $offset;
    }
}

.l-pad-left {
    @include mq(tablet) {
        padding-left: rem(gs-span(1) + $gs-gutter);
    }
}

.l-pad-right {
    @include mq(tablet) {
        padding-right: rem(gs-span(1) + $gs-gutter);
    }
}

// TOOD: Code smell. This is related to generated classes from guss-layout,
// do we really need this? If so, document usage clearly.
.l-row__item {
    padding-bottom: rem($gs-gutter * 2);
}

.u-align-middle {
    vertical-align: middle;
}

.u-divider {
    padding-top: rem($gs-baseline / 2);
    border-top: 1px solid $c-border-brand;
}
.u-divider-neutral {
    padding-top: rem($gs-baseline / 2);
    border-top: 1px solid $c-border-neutral;
}

/* Side Margins
   ========================================================================== */

.l-side-margins,
.page-side-margins {
    &:before,
    &:after {
        content: '';
        position: absolute;
        z-index: 1;
        background: $c-background-transparent;

        /**
         * Magic number: we shift these margins up to skip the header gap
         * and the (fixed) height of the nav bar
         */
        top: rem($side-margins-top-magic-number);
        height: 100%;
        height: calc(100% - #{$side-margins-top-magic-number});
        width: 0;

        @include side-margins-calc('width');
    }
    &:before {
        left: 0;
    }
    &:after {
        right: 0;
    }
}

/* Containers
   ========================================================================== */

.page-container {
    @extend .l-constrained;
    @include clearfix;
    position: relative;
}

.page-content {
    @include clearfix;
    background-color: $c-background;
    padding: 0 rem($gs-gutter / 2);
    @include mq(mobileLandscape) {
        padding: 0 rem($gs-gutter);
    }
}
.page-content--padded {
    @include mq(tablet) {
        padding: 0 rem($gs-gutter * 4) rem($gs-gutter * 8);
    }
}

// TODO: Too broad. What is this affecting?
// Only on downgrade page??
.secondary-content {
    flex-basis: 16em;
    order: 2;
    @if $old-ie {
        float: left;
    }
}
