.content__headline {
    @include fs-headline(4);
    padding-bottom: rem($gs-baseline);
    padding-top: rem($gs-baseline / 2);

    @include mq(mobileLandscape) {
        @include fs-headline(6, true);
    }
    @include mq(tablet) {
        -webkit-font-smoothing: antialiased;
        @include fs-headline(7, true);
        border-top: 0;
    }
    a {
        &,
        &:hover,
        &:active,
        &:focus {
            color: $c-neutral1;
        }
    }
    em {
        font-style: normal;
    }
    strong {
        font-weight: normal;
    }
}

.content__container {
    margin-bottom: rem($gs-gutter);
}

// TODO - likely all content containers will eventually use
// this new slim format, in which case we can remove the modifier
// and the below will become the de facto rules
.content__container--slim {
    margin: 0 auto rem($gs-gutter * 1.5);
    max-width: rem(gs-span(8));

    .content__headline {
        margin-bottom: rem($gs-baseline);
        padding-top: rem($gs-baseline / 2);
        position: relative;

        &:before {
            content: '';
            display: block;
            height: rem(1px);
            width: 100%;
            background: $c-newsAccent;
            position: absolute;
            top: 0;
            left: 0;

            // Numbers refer to gs-span(8) plus half of
            // difference to page-container width, minus $gs-gutter
            @include mq(desktop) {
                width: rem(gs-span(10));
            }

            @include mq(mem-full) {
                width: rem(gs-span(11));
            }
        }
    }
}

.content__container--border {
    border-top: rem(1px) dotted $c-neutral5;
}

.content__container--border-dark {
    border-top: rem(1px) dotted #333333;
}

.content__footer {
    color: #1a4683;
    text-align: center;
    @include fs-bodyCopy(3);
}
